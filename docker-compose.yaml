version: '3.8'

services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    env_file:
      - .env
    environment:
      - DOMAIN=https://${VAULTWARDEN_SUBDOMAIN}.${DOMAIN}
    volumes:
      - vw-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`${VAULTWARDEN_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.routers.vaultwarden.middlewares=auth"
    networks:
      - traefik-net
      - internal-net
    restart: unless-stopped

  firefly-iii:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly-iii
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    networks:
      - traefik-net
      - internal-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firefly-iii.rule=Host(`${FIREFLY_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.firefly-iii.entrypoints=websecure"
      - "traefik.http.routers.firefly-iii.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.routers.firefly-iii.middlewares=auth"
    depends_on:
      - mariadb

  mariadb:
    image: mariadb:lts
    hostname: db
    container_name: mariadb
    restart: always
    env_file: .db.env
    networks:
      - internal-net
    volumes:
      - firefly_iii_db:/var/lib/mysql

  traefik:
    image: traefik:latest
    container_name: traefik
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.routers.traefik.middlewares=auth"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    networks:
      - traefik-net
    restart: unless-stopped

  # Traefik routing to code-server running on the host machine at port 8080
  code-server:
    image: alpine
    command: sleep infinity
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-server.rule=Host(`code.${DOMAIN}`)"
      - "traefik.http.routers.code-server.entrypoints=websecure"
      - "traefik.http.routers.code-server.tls.certresolver=myresolver"
      - "traefik.http.services.code-server.loadbalancer.server.url=http://host.docker.internal:8080"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.routers.code-server.middlewares=auth"
    networks:
      - traefik-net

volumes:
  vw-data:
  firefly_iii_upload:
  firefly_iii_db:
  traefik-letsencrypt:

networks:
  traefik-net:
  internal-net:
    driver: bridge
