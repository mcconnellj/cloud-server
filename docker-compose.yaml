services:
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    env_file:
      - .env
    environment:
      - DOMAIN=https://${VAULT_SUBDOMAIN}.${DOMAIN}
    volumes:
      - vault-data:/vault/data
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.vault-http.rule=Host(`${VAULT_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.vault-http.entrypoints=web"
      - "traefik.http.routers.vault-http.middlewares=redirect-to-https"
      # HTTPS Router
      - "traefik.http.routers.vault.rule=Host(`${VAULT_SUBDOMAIN}.${DOMAIN}`)"
#      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"
    networks:
      - traefik-net
      - internal-net
    restart: unless-stopped
    expose:
      - "8200"

  firefly-iii:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly-iii
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    networks:
      - traefik-net
      - internal-net
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.firefly-iii-http.rule=Host(`${FIREFLY_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.firefly-iii-http.entrypoints=web"
      - "traefik.http.routers.firefly-iii-http.middlewares=redirect-to-https"
      # HTTPS Router
      - "traefik.http.routers.firefly-iii.rule=Host(`${FIREFLY_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.firefly-iii.entrypoints=websecure"
      - "traefik.http.routers.firefly-iii.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.services.firefly-iii.loadbalancer.server.port=8080"  # <-- Explicit port for service discovery
    depends_on:
      - mariadb

  mariadb:
    image: mariadb:lts
    hostname: db
    container_name: mariadb
    restart: always
    env_file: .db.env
    networks:
      - internal-net  # <-- Only in internal network (NOT in traefik-net)
    volumes:
      - firefly_iii_db:/var/lib/mysql

  traefik:
    image: traefik:latest
    container_name: traefik
    env_file:
      - .env # Ensure this is set
    ports:
      - "80:80"
      - "443:443"
    command:
      # Basic Traefik configuration
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # ACME configuration for wildcard certificates
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"  # Using DNS challenge
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"  # Replace with your DNS provider
      - "--certificatesresolvers.cloudflare.acme.email=${EMAIL}"  # Replace with your email
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=cloudflare"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=${CODE_SUBDOMAIN}.${DOMAIN},${FIREFLY_SUBDOMAIN}.${DOMAIN},${TRAEFIK_SUBDOMAIN}.${DOMAIN},${VAULT_SUBDOMAIN}.${DOMAIN}"
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.traefik-http.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.middlewares=redirect-to-https"
      # HTTPS Router
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
      - ./acme.json:/etc/traefik/acme.json  # Mounting the acme.json file
    networks:
      - traefik-net
    restart: unless-stopped

volumes:
  vault-data:
  firefly_iii_upload:
  firefly_iii_db:
  traefik-letsencrypt:

networks:
  traefik-net:
  internal-net:
    driver: bridge
