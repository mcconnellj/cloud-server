- name: Run Docker Compose
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Install code-server
      shell: |
        sudo curl -fsSL https://code-server.dev/install.sh | sh
        sudo mkdir -p ~/.config/code-server
        sudo echo "bind-addr: 0.0.0.0:8080" > ~/.config/code-server/config.yaml
        sudo echo "auth: none" >> ~/.config/code-server/config.yaml
        sudo echo "cert: false" >> ~/.config/code-server/config.yaml
        sudo systemctl enable --now code-server@$USER

    - name: Install Docker
      shell: |
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo usermod -aG docker $USER
        newgrp docker

    - name: Start services using Docker Compose
      community.docker.docker_compose_v2:
        project_src: ".."
        state: present
        wait: false  # âœ… Correct way to run in detached mode
      async: 300  # Timeout after 5 minutes
      poll: 0
      register: compose_job

    - name: Debug async job ID  # Optional: Check if ansible_job_id exists
      debug:
        var: compose_job

    - name: Wait for Docker Compose to finish
      async_status:
        jid: "{{ compose_job.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 10
